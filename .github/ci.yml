name: CI Pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main, feature/*, chore/*, ci/*, fix/*]
    paths:
      - "frontend/**"
      - ".github/workflows/**"

jobs:
  # Main CI job - MUST pass for PRs and feature branches
  frontend-ci:
    name: Frontend Quality Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.11.0"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./frontend

      - name: Run Biome linting
        run: pnpm lint
        working-directory: ./frontend

      - name: Check code formatting
        run: pnpm format:check
        working-directory: ./frontend

      - name: TypeScript type checking
        run: pnpm typecheck
        working-directory: ./frontend

      - name: Build application
        run: pnpm build
        working-directory: ./frontend
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: http://localhost:8000/api
          NEXT_TELEMETRY_DISABLED: 1

      # CodeRabbit integration comment
      - name: Comment CI Success
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ All CI checks passed! Ready for CodeRabbit review and merge.\n\n**Quality Gates:**\n- üîç Biome linting\n- üíÖ Prettier formatting\n- üî∑ TypeScript checking\n- üèóÔ∏è Next.js build\n\n*Automated by AI Engineer Challenge CI*'
            })

  # Lightweight security scan for educational purposes
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment Security Results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üîí Security scan completed as part of AI Engineer Challenge best practices.'
            })
